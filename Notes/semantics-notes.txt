Lab 3, Semantics.
Organization
- Two Visitors, a PopulateTable visitor and an ExpressionTypeVisitor, traversing the AST
  one after the other while modifying a shared SymbolTable.
- Types being effectively represented as inductive types with basic leaf constructors
  (including one for the bottom error type and one for the top type supertyping all other
  types) and inductive constructors for methods and classes.
Timeline and division of work
- Mark and Sascha met together to complete the majority of the lab, with work split about
  evenly between both people.
- During the first meeting, the API and initial design was sketched.
- After the section check-in, Mark changed the API to account for feedback.
- Sascha then began programming the visitors for a slate of four.
- After getting the visitors to work without incorporating inheritance, they were briefly
  redesigned and refactored into two visitors.
- A long process of debugging then ensued to make sure that the two visitors adequately
  passed all test cases, done by both Mark and Sascha.
Changes to previous labs
- No substantive changes to previous labs were made.
- One minor change was necessary, though; the addition of a type field to Expressions
  for querying by the Visitors.
- Small changes to the grammar and semantic actions were necessary to account for feedback
  received on the parser (adding the first declaration in a list of formals; returning the
  FALSE nonterminal).
Testing
- Tests were run largely by manual inspection of the MiniJava results on the programs in
  SamplePrograms and in test/junit/resources.
